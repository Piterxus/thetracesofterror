---
interface Props {
  backgroundImg: string;
  cardText: string;
  colorText: string;
  section: string;
}

const { backgroundImg, cardText, colorText, section } = Astro.props;
const backgroundUrl = `url(/${backgroundImg})`;
---

<a
  href=`/${section}/`
  class="img-card"
  style={`background-image: ${backgroundUrl}`}
>
  <span style={`color: ${colorText}`} class="card-text">{cardText}</span>
</a>

<style>
  .img-card {
    width: 150px;
    height: 150px;
    display: flex;
    padding: 1px;
    background-color: #23262d;
    background-size: cover;
    background-repeat: no-repeat;
    border-radius: 7px;
    background-position: center;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
    cursor: pointer;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    box-shadow: 0 0 15px #0ff;
    text-decoration: none;
  }

  h2 {
    margin: 0;
    font-size: 1.25rem;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
  }
  .img-card:is(:hover, :focus-within) {
    background-position: 5px 5px;
  }

  .card-text {
    font-size: 1.5rem;
    text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.5);
  }
  @media (max-width: 768px) {
    h1 {
      font-size: 2.5rem;
    }
    .img-card {
      width: 150px;
      height: 150px;
    }
    .card-text {
      font-size: 1rem;
    }

    /* .link-card-grid {
      flex-direction: column;
      gap: 1rem;
    } */
  }
  @media (max-width: 400px),
    (width: 414px) and (height: 896px),
    (width: 430px) and (height: 932px),
    (width: 412px) and (height: 915px),
    (width: 540px) and (height: 720px),
    (width: 344px) and (height: 882px),
    (width: 412px) and (height: 914px) {
    h1 {
      font-size: 2rem;
    }
    .img-card {
      width: 100px;
      height: 100px;
      background-size: 70px;
    }
  }
</style>
